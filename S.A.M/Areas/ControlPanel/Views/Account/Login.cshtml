@{
    Layout = null; 
    ViewData["Title"] = "Login";
    // var rtl = System.Threading.Thread.CurrentThread.CurrentUICulture.TextInfo.IsRightToLeft;
}

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Your App</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-up': 'slideUp 0.6s ease-out',
                        'pulse-slow': 'pulse 3s ease-in-out infinite',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(20px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' },
                        }
                    }
                }
            }
        }
    </script>
</head>
<body class="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex items-center justify-center p-4 transition-all duration-300">
    <!-- Direction Toggle -->
    <div class="fixed top-4 right-4 z-50" style="display:none;">
        <button onclick="toggleDirection()" class="bg-white/80 backdrop-blur-sm hover:bg-white shadow-lg hover:shadow-xl transition-all duration-300 px-4 py-2 rounded-full border border-gray-200 text-sm font-medium text-gray-700 hover:text-gray-900">
            <span id="dir-text">العربية</span>
        </button>
    </div>

    <!-- Background Decorations -->
    <div class="fixed inset-0 overflow-hidden pointer-events-none">
        <div class="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 to-purple-400/20 rounded-full blur-3xl animate-pulse-slow"></div>
        <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-indigo-400/20 to-pink-400/20 rounded-full blur-3xl animate-pulse-slow"></div>
    </div>

    <!-- Main Login Container -->
    <div class="w-full max-w-md relative animate-slide-up">
        <!-- Login Card -->
        <div class="bg-white/70 backdrop-blur-xl rounded-2xl shadow-2xl border border-white/20 p-8 hover:shadow-3xl transition-all duration-500">
            <!-- Logo/Header -->
            <div class="text-center mb-8">
                <div class="w-16 h-16 bg-gradient-to-br from-blue-600 to-indigo-700 rounded-2xl mx-auto mb-4 flex items-center justify-center shadow-lg">
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                    </svg>
                </div>
                <h1 class="text-2xl font-bold text-gray-900 mb-2" data-en="Welcome back" data-ar="مرحباً بعودتك">Welcome back</h1>
                <p class="text-gray-600" data-en="Sign in to your account" data-ar="سجل دخولك إلى حسابك">Sign in to your account</p>
            </div>


            <!-- Email/Password Form -->
            <form class="space-y-5 mb-6" onsubmit="handleLogin(event)" method="post" action="/ControlPanel/Account/Login">
                @Html.AntiForgeryToken()
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-2" data-en="Email address" data-ar="عنوان البريد الإلكتروني">Email address</label>
                    <input type="email"
                           id="email"
                           name="Email"
                           required
                           class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all duration-300 bg-white/70 backdrop-blur-sm hover:bg-white/90"
                           placeholder="you@example.com">
                </div>

                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-2" data-en="Password" data-ar="كلمة المرور">Password</label>
                    <div class="relative">
                        <input type="password"
                               id="password"
                               name="Password"
                               required
                               class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all duration-300 bg-white/70 backdrop-blur-sm hover:bg-white/90 pr-12"
                               placeholder="••••••••">
                        <button type="button"
                                onclick="togglePassword()"
                                class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors duration-200">
                            <svg id="eye-closed" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
                            </svg>
                            <svg id="eye-open" class="w-5 h-5 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="flex items-center justify-between">
                    <label class="flex items-center">
                        <input type="checkbox" name="RememberMe" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500 focus:ring-offset-0">
                        <span class="ml-2 text-sm text-gray-600" data-en="Remember me" data-ar="تذكرني">Remember me</span>
                    </label>
                    <a href="#" class="text-sm text-indigo-600 hover:text-indigo-500 transition-colors duration-200" data-en="Forgot password?" data-ar="نسيت كلمة المرور؟">Forgot password?</a>
                </div>

                <button type="submit"
                        class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-medium py-3 px-4 rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 active:translate-y-0">
                    <span data-en="Sign in" data-ar="تسجيل الدخول">Sign in</span>
                </button>
            </form>

            <!-- Sign Up Link -->
            <p class="mt-6 text-center text-sm text-gray-600 mb-6">
                <span data-en="Don't have an account?" data-ar="ليس لديك حساب؟">Don't have an account?</span>
                <a href="#" class="text-indigo-600 hover:text-indigo-500 font-medium transition-colors duration-200 ml-1" data-en="Sign up" data-ar="إنشاء حساب">Sign up</a>
            </p>
            <!-- Divider -->
            <div class="relative mb-6 mt-5">
                <div class="absolute inset-0 flex items-center">
                    <div class="w-full border-t border-gray-300"></div>
                </div>
                <div class="relative flex justify-center text-sm">
                    <span class="px-4 bg-white text-gray-500" data-en="or continue with email" data-ar="أو تابع بإحدى حسابات مواقع التواصل">or continue with socail media account</span>
                </div>
            </div>

            <!-- Social Login Buttons -->
            <div class="space-y-3 mb-6">
                <button class="w-full flex items-center justify-center gap-3 bg-white hover:bg-gray-50 border border-gray-300 hover:border-gray-400 rounded-xl py-3 px-4 transition-all duration-300 shadow-sm hover:shadow-md group">
                    <svg class="w-5 h-5" viewBox="0 0 24 24">
                        <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" />
                        <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" />
                        <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" />
                        <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" />
                    </svg>
                    <span class="font-medium text-gray-700 group-hover:text-gray-900" data-en="Continue with Google" data-ar="متابعة مع جوجل">Continue with Google</span>
                </button>

                <button class="w-full flex items-center justify-center gap-3 bg-[#1877F2] hover:bg-[#166FE5] text-white rounded-xl py-3 px-4 transition-all duration-300 shadow-sm hover:shadow-md">
                    <svg class="w-5 h-5 fill-current" viewBox="0 0 24 24">
                        <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
                    </svg>
                    <span class="font-medium" data-en="Continue with Facebook" data-ar="متابعة مع فيسبوك">Continue with Facebook</span>
                </button>

                <div class="grid grid-cols-3 gap-3">
                    <button class="flex items-center justify-center bg-black hover:bg-gray-800 text-white rounded-xl py-3 transition-all duration-300 shadow-sm hover:shadow-md">
                        <svg class="w-5 h-5 fill-current" viewBox="0 0 24 24">
                            <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z" />
                        </svg>
                    </button>
                    <button class="flex items-center justify-center bg-[#0A66C2] hover:bg-[#094E96] text-white rounded-xl py-3 transition-all duration-300 shadow-sm hover:shadow-md">
                        <svg class="w-5 h-5 fill-current" viewBox="0 0 24 24">
                            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" />
                        </svg>
                    </button>
                    <button class="flex items-center justify-center bg-[#FF6B35] hover:bg-[#E55A32] text-white rounded-xl py-3 transition-all duration-300 shadow-sm hover:shadow-md">
                        <svg class="w-5 h-5 fill-current" viewBox="0 0 24 24">
                            <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.097.118.110.222.082.343-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.748-1.378 0 0-.599 2.282-.746 2.840-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24.001 12.017 24.001c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001 12.017.001z" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        let isRTL = false;
        toggleDirection();
        function toggleDirection() {
            const html = document.documentElement;
            const dirText = document.getElementById('dir-text');

            if (isRTL) {
                html.setAttribute('dir', 'ltr');
                html.setAttribute('lang', 'en');
                dirText.textContent = 'العربية';
                updateText('en');
                isRTL = false;
            } else {
                html.setAttribute('dir', 'rtl');
                html.setAttribute('lang', 'ar');
                dirText.textContent = 'English';
                updateText('ar');
                isRTL = true;
            }
        }

        function updateText(lang) {
            const elements = document.querySelectorAll('[data-en][data-ar]');
            elements.forEach(element => {
                element.textContent = element.getAttribute('data-' + lang);
            });
        }

        function togglePassword() {
            const passwordInput = document.getElementById('password');
            const eyeOpen = document.getElementById('eye-open');
            const eyeClosed = document.getElementById('eye-closed');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeOpen.classList.remove('hidden');
                eyeClosed.classList.add('hidden');
            } else {
                passwordInput.type = 'password';
                eyeOpen.classList.add('hidden');
                eyeClosed.classList.remove('hidden');
            }
        }

        async function handleLogin(event) {
            event.preventDefault();
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            // Simulate login process
            const button = event.target.querySelector('button[type="submit"]');
            const originalText = button.innerHTML;

            button.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Signing in...';
            button.disabled = true;

            // setTimeout(() => {
            //     alert(`Login attempt with:\nEmail: ${email}\nPassword: ${'*'.repeat(password.length)}`);
            //     button.innerHTML = originalText;
            //     button.disabled = false;
            // }, 2000);
            const form = event.target;
            const formData = new FormData(form);
            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                if (response.redirected) {
                    window.location.href = response.url;
                    return;
                }

                const html = await response.text();
                // Try to extract error message from the returned HTML (if any)
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const validationSummary = doc.querySelector('.validation-summary-errors, .text-danger, #loginError');
                if (validationSummary) {
                    errorDiv.textContent = validationSummary.textContent.trim();
                } else {
                    // fallback: replace form with returned HTML
                    form.outerHTML = html;
                }
            } catch (err) {
                errorDiv.textContent = 'An error occurred. Please try again.';
            } finally {
                button.disabled = false;
                button.innerHTML = originalText;
            }
        }

        // Add some interactive effects
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('input[type="email"], input[type="password"]');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('transform', 'scale-105');
                });

                input.addEventListener('blur', function() {
                    this.parentElement.classList.remove('transform', 'scale-105');
                });
            });
        });
    </script>
</body>
</html>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
